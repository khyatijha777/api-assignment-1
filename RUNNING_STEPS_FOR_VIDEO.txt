================================================================================
STEP-BY-STEP INSTRUCTIONS: RUNNING PROJECT FOR VIDEO DEMONSTRATION
================================================================================

PREREQUISITES:
================================================================================
✓ Python 3.8 or higher installed
✓ All dependencies from requirements.txt installed
✓ Git (optional, for cloning project)
✓ Terminal/Command Prompt ready
✓ Web browser ready
✓ Postman or similar API testing tool (optional)

================================================================================
STEP 1: INSTALL DEPENDENCIES (If not already installed)
================================================================================

Open Terminal/Command Prompt and navigate to project directory:

    cd D:\BITS\sem2\API\assignment

Install required packages:

    pip install -r requirements.txt

Required packages include:
- prefect (for workflow orchestration)
- pandas, numpy (for data processing)
- scikit-learn (for ML models)
- flask (for API)
- matplotlib, seaborn (for visualization)
- joblib (for model persistence)

Verify installation:
    pip list

Expected duration: 2-3 minutes

================================================================================
STEP 2: PREPARE PROJECT STRUCTURE
================================================================================

Ensure these files exist:
✓ prefect_data_pipeline.py
✓ prefect_ml_pipeline.py
✓ prefect_api_integration.py
✓ prefect_deployment.py
✓ prefect_monitoring.py
✓ heart.csv (original dataset)
✓ requirements.txt

Create necessary folders (if not exist):
- models/
- reports/
- dashboard/
- logs/

Command to create folders:
    mkdir models reports dashboard logs

================================================================================
STEP 3: START PREFECT SERVER (Terminal 1)
================================================================================

Open FIRST Terminal/Command Prompt:

    cd D:\BITS\sem2\API\assignment
    
    prefect server start

You should see:
    "Prefect UI is available at http://127.0.0.1:4200"
    "Database setup complete"

KEEP THIS TERMINAL OPEN - Prefect server must be running throughout demo.

Verify: Open browser to http://localhost:4200
Expected: Prefect UI dashboard loads

Duration: 30 seconds to start

================================================================================
STEP 4: DEPLOY DATA PIPELINE (Terminal 2)
================================================================================

Open SECOND Terminal/Command Prompt:

    cd D:\BITS\sem2\API\assignment
    
    python prefect_deployment.py

Or if using different method:
    python -c "from prefect_data_pipeline import *; heart_disease_data_pipeline.serve()"

This deploys the data pipeline with 2-minute interval schedule.

Verify in Prefect UI: Check http://localhost:4200 for deployed flows

Expected:
- heart-disease-data-pipeline visible
- Scheduled to run every 2 minutes
- Active status

Duration: 1 minute

================================================================================
STEP 5: RUN ML PIPELINE (One-time execution)
================================================================================

In the same Terminal 2, run:

    python prefect_ml_pipeline.py

This will:
1. Load processed data (heart_processed.csv)
2. Split data (70% train, 30% test)
3. Train Logistic Regression model
4. Train Random Forest model
5. Evaluate both models
6. Save models to models/ folder
7. Save metrics to models/ folder
8. Generate performance reports

Expected output:
    "Logistic Regression - Accuracy: 86.36%"
    "Random Forest - Accuracy: 98.05%"
    "Models saved successfully"
    "Performance report generated"

Check models/ folder:
    - logistic_regression_model.pkl
    - random_forest_model.pkl
    - logistic_regression_metrics.json
    - random_forest_metrics.json

Check reports/ folder:
    - performance_report_YYYYMMDD_HHMMSS.json

Duration: 2-3 minutes

================================================================================
STEP 6: START API SERVER (Terminal 3)
================================================================================

Open THIRD Terminal/Command Prompt:

    cd D:\BITS\sem2\API\assignment
    
    python prefect_api_integration.py

Expected output:
    "Starting Heart Disease Prediction API..."
    "API is running at http://localhost:5000"
    "Press Ctrl+C to stop"

KEEP THIS TERMINAL OPEN - API server must be running throughout demo.

Verify API is running:
    Open browser to http://localhost:5000/health
    
Expected JSON response:
    {
        "status": "healthy",
        "timestamp": "2025-...",
        "service": "Heart Disease Prediction API"
    }

Duration: 30 seconds

================================================================================
STEP 7: TEST ALL API ENDPOINTS
================================================================================

In a new Terminal 4 or use browser/Postman:

Endpoints to test:

1. Health Check:
   curl http://localhost:5000/health
   Or visit: http://localhost:5000/health

2. Application Details:
   curl http://localhost:5000/app/details
   Or visit: http://localhost:5000/app/details

3. Pipeline Status:
   curl http://localhost:5000/pipeline/status
   Or visit: http://localhost:5000/pipeline/status

4. Model Information:
   curl http://localhost:5000/models/info
   Or visit: http://localhost:5000/models/info

5. Dataset Information:
   curl http://localhost:5000/dataset/info
   Or visit: http://localhost:5000/dataset/info

6. Recent Logs:
   curl http://localhost:5000/logs/recent
   Or visit: http://localhost:5000/logs/recent

All should return JSON responses.

Duration: 2 minutes

================================================================================
STEP 8: VERIFY PREFECT UI DASHBOARD
================================================================================

Open browser to: http://localhost:4200

Navigate through:
1. Work Pools (if applicable)
2. Deployments (should see data pipeline deployment)
3. Flow Runs (should show pipeline execution history)
4. Tasks (view individual task runs)
5. Logs (view execution logs)

Expected:
- Active deployments visible
- Recent flow runs showing
- Tasks with success status
- Logs available for each run

Take screenshots for video if needed.

Duration: 2 minutes

================================================================================
STEP 9: RUN MONITORING DASHBOARD
================================================================================

In Terminal 2 or create new Terminal:

    cd D:\BITS\sem2\API\assignment
    
    python prefect_monitoring.py

This generates:
- Monitoring dashboard as PNG image
- Performance reports as JSON
- System metrics logging

Check outputs:
- dashboard/monitoring_dashboard_YYYYMMDD_HHMMSS.png
- reports/performance_report_YYYYMMDD_HHMMSS.json

Open dashboard image to show in video.

Duration: 1 minute

================================================================================
STEP 10: VERIFY FILES GENERATED
================================================================================

Check these files/folders:

1. Processed Data:
   - heart_processed.csv (should have 23 columns after encoding)

2. Models:
   - models/logistic_regression_model.pkl
   - models/random_forest_model.pkl
   - models/logistic_regression_metrics.json
   - models/random_forest_metrics.json

3. Reports:
   - reports/performance_report_YYYYMMDD_HHMMSS.json

4. Dashboard:
   - dashboard/monitoring_dashboard_YYYYMMDD_HHMMSS.png

5. Logs:
   - logs/ directory with log files

Duration: 1 minute

================================================================================
VIDEO RECORDING CHECKLIST
================================================================================

Before recording, ensure:

□ Terminal 1: Prefect server running (http://localhost:4200 accessible)
□ Terminal 2: Data pipeline deployed and running
□ Terminal 3: API server running (http://localhost:5000 accessible)
□ Models trained: Check models/ folder has .pkl and .json files
□ Dashboard generated: Check dashboard/ folder has PNG image
□ Reports generated: Check reports/ folder has JSON files
□ All API endpoints tested: All 6 endpoints working
□ Prefect UI accessible: Can view flow runs and logs
□ Browser tabs ready: API endpoints and Prefect UI tabs open
□ Code files ready: All .py files open in IDE
□ Audio working: Microphone tested for narration

================================================================================
QUICK START COMMANDS (For quick demo after setup)
================================================================================

Terminal 1 - Start Prefect:
    prefect server start

Terminal 2 - Deploy Pipeline & Run ML:
    python prefect_deployment.py
    python prefect_ml_pipeline.py

Terminal 3 - Start API:
    python prefect_api_integration.py

Browser - Test URLs:
    http://localhost:4200 (Prefect UI)
    http://localhost:5000/health (API Health Check)
    http://localhost:5000/app/details (App Details)

================================================================================
TROUBLESHOOTING
================================================================================

Problem: Prefect server won't start
Solution: 
- Check if port 4200 is already in use
- Try: prefect server start --host 0.0.0.0
- Or: Change port with --port 4201

Problem: API server gives error
Solution:
- Ensure Prefect server is running first
- Check all imports are correct
- Verify heart.csv exists in project folder

Problem: Models not training
Solution:
- Ensure heart_processed.csv exists
- Check data file has correct format
- Verify scikit-learn is installed correctly

Problem: API endpoints return 500 error
Solution:
- Check API server logs in terminal
- Ensure models exist in models/ folder
- Verify all data files exist

Problem: Pipeline not running automatically
Solution:
- Check deployment configuration in prefect_deployment.py
- Verify schedule is set correctly
- Check Prefect UI for deployment status

Problem: No logs appearing
Solution:
- Check logs/ directory exists
- Verify write permissions
- Check logging configuration in pipeline files

================================================================================
TESTING SCRIPT (Run before recording video)
================================================================================

Create a test file: test_system.py

import requests

# Test API endpoints
base_url = "http://localhost:5000"

endpoints = [
    "/health",
    "/app/details",
    "/pipeline/status",
    "/models/info",
    "/dataset/info",
    "/logs/recent"
]

print("Testing API endpoints...")
for endpoint in endpoints:
    try:
        response = requests.get(f"{base_url}{endpoint}")
        if response.status_code == 200:
            print(f"✓ {endpoint} - OK")
        else:
            print(f"✗ {endpoint} - Error: {response.status_code}")
    except Exception as e:
        print(f"✗ {endpoint} - Failed: {e}")

print("\nTesting completed!")

Run this to verify all endpoints work before recording.

================================================================================
CLEANUP (Optional - to reset system)
================================================================================

To stop all services:
1. Terminal 3: Press Ctrl+C to stop API server
2. Terminal 2: Press Ctrl+C to stop ML pipeline
3. Terminal 1: Press Ctrl+C to stop Prefect server

To clean generated files (before fresh start):
    del models\*.pkl models\*.json
    del reports\*.json
    del dashboard\*.png
    del logs\*.log
    del heart_processed.csv

To start fresh:
Follow all steps again from Step 1.

================================================================================
EXPECTED TIMING FOR VIDEO RECORDING
================================================================================

Total setup time: 5-7 minutes
Video recording time: 10-15 minutes

Breakdown:
- Introduction: 30 seconds
- Sub-Objective 1 Demo: 3-4 minutes
- Sub-Objective 2 Demo: 2-3 minutes
- Sub-Objective 3 Demo: 2-3 minutes
- Summary: 1-2 minutes

================================================================================
DURING VIDEO RECORDING - FOLLOW THIS ORDER:
================================================================================

1. Show project structure and files (30 sec)
2. Start all services (Terminal commands) (1 min)
3. Demonstrate Data Pipeline (prefect_data_pipeline.py) (2 min)
4. Show Prefect UI dashboard (1 min)
5. Show ML Pipeline and results (2 min)
6. Demonstrate API endpoints (2 min)
7. Show monitoring dashboard image (30 sec)
8. Summary and conclusion (1 min)

Total: ~10 minutes

================================================================================
END OF INSTRUCTIONS
================================================================================

